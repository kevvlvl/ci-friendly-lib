name: Build an RC artifact

on:
  push:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: Set Current Date
        id: build-date
        run: |
          buildDateValue=$(date +'%Y%m%d%H%M')
          echo "Build Date = $buildDateValue"
          echo "::set-output name=BUILD_DATE::$buildDateValue"

      - name: Set Current Short Commit ID
        id: build-id
        run: |
          buildCommitId=$(git rev-parse --short $GITHUB_SHA)
          echo "Short Commit ID = $buildCommitId"
          echo "::set-output name=COMMIT_ID::$buildCommitId"

      - name: Determine RC version
        id: rc
        run: |
          # Gather latest RC git tag
          latestGitTag=$(git tag --sort=-taggerdate -l rc_\* | head -n1)
          echo "Latest Git Tag = $latestGitTag"
          
          latestGitTagValue=$(latestGitTag | awk -F'_' '{print $2}')
          echo "::set-output name=RC_VER::$latestGitTagValue"
          
          # Ensure this new git commit is tagged with RC
          
          echo "Tagging current Git Commit with tag $latestGitTag"
          
          git config --global user.email "github-action-${{ github.actor }}@noreply.github.com"
          git config --global user.name "${{ github.actor }}"
        
          newGitTagRc="${latestGitTag}_${{ steps.build-id.outputs.COMMIT_ID }}"
        
          git tag -a "$newGitTagRc" -m "rc version"
          git push origin "$newGitTagRc"

      - name: Build java
        run: ./mvnw clean package -Drevision=${{ steps.rc.outputs.RC_VER }} -Dchangelist=-RC-${{ steps.build-date.outputs.BUILD_DATE }}-${{ steps.build-id.outputs.COMMIT_ID }}

      - name: Set JAR name
        id: build-jar
        run: |
          # Determine JAR name
          jarName=$(ls target | grep .jar)
          echo "::set-output name=JAR_NAME::$jarName"

      - name: Upload artifact
        uses: actions/upload-artifact@main
        with:
          name: ci-friendly-lib artifact
          path: target/RC-${{ steps.build-jar.outputs.JAR_NAME }}